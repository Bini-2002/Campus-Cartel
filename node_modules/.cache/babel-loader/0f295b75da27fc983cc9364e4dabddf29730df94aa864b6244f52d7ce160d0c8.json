{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../features/auth/authSlice';\nimport postsReducer from '../features/posts/postsSlice';\nimport groupsReducer from '../features/groups/groupsSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n    posts: postsReducer,\n    groups: groupsReducer\n  }\n});\n\n// Enable RTK Query features like refetching on focus or reconnect\nsetupListeners(store.dispatch);\nexport default store;","map":{"version":3,"names":["configureStore","authReducer","postsReducer","groupsReducer","setupListeners","store","reducer","auth","posts","groups","dispatch"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/store/store.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport postsReducer from '../features/posts/postsSlice';\r\nimport groupsReducer from '../features/groups/groupsSlice';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    posts: postsReducer,\r\n    groups: groupsReducer,\r\n  },\r\n});\r\n\r\n// Enable RTK Query features like refetching on focus or reconnect\r\nsetupListeners(store.dispatch);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAE;IACPC,IAAI,EAAEN,WAAW;IACjBO,KAAK,EAAEN,YAAY;IACnBO,MAAM,EAAEN;EACV;AACF,CAAC,CAAC;;AAEF;AACAC,cAAc,CAACC,KAAK,CAACK,QAAQ,CAAC;AAK9B,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}