{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios'; // Simplified import\nimport API_BASE_URL from '../../apiConfigure'; // Adjust path if apiConfigure is elsewhere\n\n// Define the User type based on your backend response\n\nconst initialState = {\n  users: [],\n  isLoading: false,\n  error: null\n};\n\n// Async thunk to fetch all users\nexport const fetchUsers = createAsyncThunk('admin/fetchUsers', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      return rejectWithValue('No access token found.');\n    }\n    const response = await axios.get(`${API_BASE_URL}/users/`, {\n      // Or your admin-specific users endpoint\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      return rejectWithValue(error.response.data.detail || 'Failed to fetch users.');\n    }\n    return rejectWithValue('An unknown error occurred while fetching users.');\n  }\n});\n\n// Async thunk to delete a user\nexport const deleteUser = createAsyncThunk('admin/deleteUser', async (userId, {\n  rejectWithValue\n}) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      return rejectWithValue('No access token found.');\n    }\n    await axios.delete(`${API_BASE_URL}/users/${userId}/`, {\n      // Or your admin-specific user delete endpoint\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return userId; // Return the id of the deleted user\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      return rejectWithValue(error.response.data.detail || `Failed to delete user ${userId}.`);\n    }\n    return rejectWithValue(`An unknown error occurred while deleting user ${userId}.`);\n  }\n});\nconst adminSlice = createSlice({\n  name: 'admin',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch Users\n    .addCase(fetchUsers.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.users = action.payload;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || 'Failed to fetch users';\n    })\n    // Delete User\n    .addCase(deleteUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(deleteUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.users = state.users.filter(user => user.id !== action.payload);\n    }).addCase(deleteUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || 'Failed to delete user';\n    });\n  }\n});\nexport default adminSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","initialState","users","isLoading","error","fetchUsers","_","rejectWithValue","token","localStorage","getItem","response","get","headers","Authorization","data","isAxiosError","detail","deleteUser","userId","delete","adminSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","filter","user","id","reducer"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/features/admin/adminSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios'; // Simplified import\r\nimport API_BASE_URL from '../../apiConfigure'; // Adjust path if apiConfigure is elsewhere\r\n\r\n// Define the User type based on your backend response\r\ninterface User {\r\n  id: number;\r\n  email: string;\r\n  username: string;\r\n  user_type: string; // e.g., 'student', 'admin'\r\n  // Add other relevant user fields\r\n}\r\n\r\ninterface AdminState {\r\n  users: User[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: AdminState = {\r\n  users: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Async thunk to fetch all users\r\nexport const fetchUsers = createAsyncThunk<User[], void, { rejectValue: string }>(\r\n  'admin/fetchUsers',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        return rejectWithValue('No access token found.');\r\n      }\r\n      const response = await axios.get(`${API_BASE_URL}/users/`, { // Or your admin-specific users endpoint\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data as User[];\r\n    } catch (error: any) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        return rejectWithValue(error.response.data.detail || 'Failed to fetch users.');\r\n      }\r\n      return rejectWithValue('An unknown error occurred while fetching users.');\r\n    }\r\n  }\r\n);\r\n\r\n// Async thunk to delete a user\r\nexport const deleteUser = createAsyncThunk<number, number, { rejectValue: string }>(\r\n  'admin/deleteUser',\r\n  async (userId, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem('access_token');\r\n      if (!token) {\r\n        return rejectWithValue('No access token found.');\r\n      }\r\n      await axios.delete(`${API_BASE_URL}/users/${userId}/`, { // Or your admin-specific user delete endpoint\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return userId; // Return the id of the deleted user\r\n    } catch (error: any) {\r\n      if (axios.isAxiosError(error) && error.response) {\r\n        return rejectWithValue(error.response.data.detail || `Failed to delete user ${userId}.`);\r\n      }\r\n      return rejectWithValue(`An unknown error occurred while deleting user ${userId}.`);\r\n    }\r\n  }\r\n);\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch Users\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\r\n        state.isLoading = false;\r\n        state.users = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload || 'Failed to fetch users';\r\n      })\r\n      // Delete User\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state, action: PayloadAction<number>) => {\r\n        state.isLoading = false;\r\n        state.users = state.users.filter((user) => user.id !== action.payload);\r\n      })\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload || 'Failed to delete user';\r\n      });\r\n  },\r\n});\r\n\r\nexport default adminSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}