{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binig\\\\Desktop\\\\Campus-Cartel\\\\campus-connect\\\\src\\\\pages\\\\Groups.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport API_BASE_URL from '../apiConfigure';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChat = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    id\n  } = useParams(); // Group ID from the URL\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    if ((user === null || user === void 0 ? void 0 : user.user_type) !== 'student') return;\n    const fetchMessages = async () => {\n      const response = await axios.get(`${API_BASE_URL}/groups/${id}/messages/`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`\n        }\n      });\n      setMessages(response.data);\n    };\n    fetchMessages();\n  }, [id, user]);\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === '') return;\n    const response = await axios.post(`${API_BASE_URL}/groups/${id}/messages/`, {\n      content: newMessage\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    setMessages([...messages, response.data]);\n    setNewMessage('');\n  };\n  if ((user === null || user === void 0 ? void 0 : user.user_type) !== 'student') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender_username, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \" \", message.content]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupChat, \"IdVG8DNpgUiTzJd9/LVioM9sBFk=\", false, function () {\n  return [useAuth, useParams];\n});\n_c = GroupChat;\nexport default GroupChat;\nvar _c;\n$RefreshReg$(_c, \"GroupChat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navigate","axios","useAuth","API_BASE_URL","jsxDEV","_jsxDEV","GroupChat","_s","user","id","messages","setMessages","newMessage","setNewMessage","user_type","fetchMessages","response","get","headers","Authorization","localStorage","getItem","data","handleSendMessage","trim","post","content","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","message","sender_username","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/pages/Groups.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport API_BASE_URL from '../apiConfigure';\r\n\r\nconst GroupChat = () => {\r\n  const { user } = useAuth();\r\n  const { id } = useParams(); // Group ID from the URL\r\n  const [messages, setMessages] = useState<{ id: number; sender_username: string; content: string }[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user?.user_type !== 'student') return;\r\n\r\n    const fetchMessages = async () => {\r\n      const response = await axios.get<{ id: number; sender_username: string; content: string }[]>(\r\n        `${API_BASE_URL}/groups/${id}/messages/`,\r\n        {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n        }\r\n      );\r\n      setMessages(response.data);\r\n    };\r\n    fetchMessages();\r\n  }, [id, user]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === '') return;\r\n\r\n    const response = await axios.post<{ id: number; sender_username: string; content: string }>(\r\n      `${API_BASE_URL}/groups/${id}/messages/`,\r\n      { content: newMessage },\r\n      {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('access_token')}` },\r\n      }\r\n    );\r\n    setMessages([...messages, response.data]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  if (user?.user_type !== 'student') {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"messages\">\r\n        {messages.map((message) => (\r\n          <div key={message.id} className=\"message\">\r\n            <strong>{message.sender_username}:</strong> {message.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"message-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}