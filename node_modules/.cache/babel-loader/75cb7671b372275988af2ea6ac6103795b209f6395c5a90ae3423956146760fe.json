{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binig\\\\Desktop\\\\Campus-Cartel\\\\campus-connect\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts, toggleLike, deletePost } from '../features/posts/postsSlice'; // Adjust path as needed\nimport PostCard from '../components/posts/PostCard'; // Assuming PostCard component exists\nimport { motion } from 'framer-motion';\nimport '../styles/Home.css'; // Import the CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    items: posts,\n    isLoading,\n    error\n  } = useSelector(state => state.posts);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error loading posts: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"home-page-container\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: [posts.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts-message\",\n      children: \"No posts yet. Be the first to share something!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"post-card-wrapper\" // You'll style PostCard internally\n        ,\n        initial: {\n          opacity: 0,\n          y: 30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.4,\n          delay: post.id * 0.05\n        } // Stagger animation\n        ,\n        children: /*#__PURE__*/_jsxDEV(PostCard // PostCard itself should have its own styling (e.g., PostCard.css)\n        , {\n          post: post,\n          onLike: () => dispatch(toggleLike({\n            postId: post.id,\n            like: true\n          })),\n          onUnlike: () => dispatch(toggleLike({\n            postId: post.id,\n            like: false\n          })),\n          onComment: () => {/* Implement comment handler here */},\n          onDelete: () => dispatch(deletePost(post.id))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Lvy4cr5NGG9dTbZiMBnYiCY4Kfc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchPosts","toggleLike","deletePost","PostCard","motion","jsxDEV","_jsxDEV","Home","_s","dispatch","items","posts","isLoading","error","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","transition","duration","length","map","post","y","delay","id","onLike","postId","like","onUnlike","onComment","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppDispatch, RootState } from '../store/store';\r\nimport { fetchPosts, toggleLike, deletePost } from '../features/posts/postsSlice'; // Adjust path as needed\r\nimport PostCard from '../components/posts/PostCard'; // Assuming PostCard component exists\r\nimport { motion } from 'framer-motion';\r\nimport '../styles/Home.css'; // Import the CSS\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { items: posts, isLoading, error } = useSelector((state: RootState) => state.posts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"home-page-container\">\r\n        <div className=\"loading-spinner-container\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"home-page-container\">\r\n        <p className=\"error-message\">Error loading posts: {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"home-page-container\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      {posts.length === 0 && !isLoading && (\r\n        <p className=\"no-posts-message\">No posts yet. Be the first to share something!</p>\r\n      )}\r\n      <div className=\"posts-list\">\r\n        {posts.map((post) => (\r\n          <motion.div\r\n            key={post.id}\r\n            className=\"post-card-wrapper\" // You'll style PostCard internally\r\n            initial={{ opacity: 0, y: 30 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.4, delay: post.id * 0.05 }} // Stagger animation\r\n          >\r\n            <PostCard // PostCard itself should have its own styling (e.g., PostCard.css)\r\n              post={post}\r\n              onLike={() => dispatch(toggleLike({ postId: post.id, like: true }))}\r\n              onUnlike={() => dispatch(toggleLike({ postId: post.id, like: false }))}\r\n              onComment={() => {/* Implement comment handler here */}}\r\n              onDelete={() => dispatch(deletePost(post.id))}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}