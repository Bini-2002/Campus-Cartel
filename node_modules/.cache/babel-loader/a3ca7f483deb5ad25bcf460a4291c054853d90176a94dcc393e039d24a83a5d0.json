{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport API_BASE_URL from '../../apiConfigure';\nconst initialState = {\n  items: [],\n  isLoading: false,\n  error: null\n};\n\n// Define the fetchPosts action\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async () => {\n  const response = await axios.get(`${API_BASE_URL}/posts/`);\n  return response.data;\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    toggleLike: (state, action) => {\n      const post = state.items.find(p => p.id === action.payload);\n      if (post) {\n        post.liked = !post.liked;\n        post.like_count += post.liked ? 1 : -1;\n      }\n    },\n    deletePost: (state, action) => {\n      state.items = state.items.filter(post => post.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.items = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message || 'Failed to fetch posts';\n    });\n  }\n});\nexport const {\n  toggleLike,\n  deletePost\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","initialState","items","isLoading","error","fetchPosts","response","get","data","postsSlice","name","reducers","toggleLike","state","action","post","find","p","id","payload","liked","like_count","deletePost","filter","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/features/posts/postsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport API_BASE_URL from '../../apiConfigure';\r\n\r\nexport interface Post {\r\n  id: number;\r\n  content: string;\r\n  like_count: number;\r\n  comment_count: number;\r\n  liked: boolean;\r\n}\r\n\r\ninterface PostsState {\r\n  items: Post[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  items: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\n// Define the fetchPosts action\r\nexport const fetchPosts = createAsyncThunk<Post[]>('posts/fetchPosts', async () => {\r\n  const response = await axios.get<Post[]>(`${API_BASE_URL}/posts/`);\r\n  return response.data;\r\n});\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    toggleLike: (state, action) => {\r\n      const post = state.items.find((p) => p.id === action.payload);\r\n      if (post) {\r\n        post.liked = !post.liked;\r\n        post.like_count += post.liked ? 1 : -1;\r\n      }\r\n    },\r\n    deletePost: (state, action) => {\r\n      state.items = state.items.filter((post) => post.id !== action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchPosts.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchPosts.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchPosts.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message || 'Failed to fetch posts';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { toggleLike, deletePost } = postsSlice.actions;\r\nexport default postsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,oBAAoB;AAgB7C,MAAMC,YAAwB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CAAS,kBAAkB,EAAE,YAAY;EACjF,MAAMQ,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAS,GAAGP,YAAY,SAAS,CAAC;EAClE,OAAOM,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGZ,WAAW,CAAC;EAC7Ba,IAAI,EAAE,OAAO;EACbT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,IAAI,GAAGF,KAAK,CAACX,KAAK,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MAC7D,IAAIJ,IAAI,EAAE;QACRA,IAAI,CAACK,KAAK,GAAG,CAACL,IAAI,CAACK,KAAK;QACxBL,IAAI,CAACM,UAAU,IAAIN,IAAI,CAACK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACxC;IACF,CAAC;IACDE,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACX,KAAK,GAAGW,KAAK,CAACX,KAAK,CAACqB,MAAM,CAAER,IAAI,IAAKA,IAAI,CAACG,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACxE;EACF,CAAC;EACDK,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,UAAU,CAACsB,OAAO,EAAGd,KAAK,IAAK;MACtCA,KAAK,CAACV,SAAS,GAAG,IAAI;MACtBU,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDsB,OAAO,CAACrB,UAAU,CAACuB,SAAS,EAAE,CAACf,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACK,OAAO;IAC9B,CAAC,CAAC,CACDO,OAAO,CAACrB,UAAU,CAACwB,QAAQ,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACV,KAAK,CAAC0B,OAAO,IAAI,uBAAuB;IAC/D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAElB,UAAU;EAAEU;AAAW,CAAC,GAAGb,UAAU,CAACsB,OAAO;AAC5D,eAAetB,UAAU,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}