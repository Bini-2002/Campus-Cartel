{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\binig\\\\Desktop\\\\Campus-Cartel\\\\campus-connect\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedTypes\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Allow admin to bypass restrictions\n  if (!user || !allowedTypes.includes(user.user_type) && !user.is_superuser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","children","allowedTypes","_s","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","includes","user_type","is_superuser","to","_c","$RefreshReg$"],"sources":["C:/Users/binig/Desktop/Campus-Cartel/campus-connect/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n  allowedTypes: string[];\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, allowedTypes }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Allow admin to bypass restrictions\r\n  if (!user || (!allowedTypes.includes(user.user_type) && !user.is_superuser)) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOjD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EAEnC,IAAIU,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAI,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAI,CAACL,IAAI,IAAK,CAACF,YAAY,CAACQ,QAAQ,CAACN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACP,IAAI,CAACQ,YAAa,EAAE;IAC3E,oBAAOf,OAAA,CAACH,QAAQ;MAACmB,EAAE,EAAC;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBAAOZ,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CAbIH,cAA6C;EAAA,QACvBL,OAAO;AAAA;AAAAmB,EAAA,GAD7Bd,cAA6C;AAcnD,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}